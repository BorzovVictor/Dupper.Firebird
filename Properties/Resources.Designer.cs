//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dupper.Firebird.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Dupper.Firebird.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select RF.RDB$FIELD_POSITION, RF.RDB$FIELD_NAME FIELD_NAME,
        ///       iif(RF.RDB$FIELD_NAME in (select S.RDB$FIELD_NAME
        ///            from RDB$INDEX_SEGMENTS as S
        ///            left join RDB$RELATION_CONSTRAINTS as RC on (RC.RDB$INDEX_NAME = S.RDB$INDEX_NAME)
        ///            where RC.RDB$RELATION_NAME = @TABLE_NAME and
        ///            RC.RDB$CONSTRAINT_TYPE = &apos;PRIMARY KEY&apos;), 1, 0) PK_FIELD,
        ///       case F.RDB$FIELD_TYPE
        ///         when 7 then case F.RDB$FIELD_SUB_TYPE
        ///                       when 0 then iif(RF.RDB$NUL [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string SqlFieldsForTable {
            get {
                return ResourceManager.GetString("SqlFieldsForTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select RF.RDB$FIELD_POSITION, RF.RDB$FIELD_NAME FIELD_NAME,
        ///       iif(RF.RDB$FIELD_NAME in (select S.RDB$FIELD_NAME
        ///            from RDB$INDEX_SEGMENTS as S
        ///            left join RDB$RELATION_CONSTRAINTS as RC on (RC.RDB$INDEX_NAME = S.RDB$INDEX_NAME)
        ///            where RC.RDB$RELATION_NAME = @TABLE_NAME and
        ///            RC.RDB$CONSTRAINT_TYPE = &apos;PRIMARY KEY&apos;), 1, 0) PK_FIELD,
        ///       case F.RDB$FIELD_TYPE
        ///         when 7 then case F.RDB$FIELD_SUB_TYPE
        ///                       when 0 then iif(RF.RDB$NUL [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string SqlFieldsForTableDelphi {
            get {
                return ResourceManager.GetString("SqlFieldsForTableDelphi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на --  list table fields
        ///SELECT RDB$FIELD_NAME
        ///FROM RDB$RELATION_FIELDS
        ///WHERE RDB$RELATION_NAME=@TABLE_NAME
        ///ORDER BY RDB$FIELD_POSITION;.
        /// </summary>
        internal static string SqlFieldsName {
            get {
                return ResourceManager.GetString("SqlFieldsName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на --query returns list of PRIMARY KEYs for table
        ///select S.RDB$FIELD_NAME
        ///from RDB$INDEX_SEGMENTS as S
        ///left join RDB$RELATION_CONSTRAINTS as RC on (RC.RDB$INDEX_NAME = S.RDB$INDEX_NAME)
        ///where RC.RDB$RELATION_NAME = @TABLE_NAME and
        ///      RC.RDB$CONSTRAINT_TYPE = &apos;PRIMARY KEY&apos;
        ///ORDER BY RDB$FIELD_POSITION;.
        /// </summary>
        internal static string SqlKeyFieldsForTable {
            get {
                return ResourceManager.GetString("SqlKeyFieldsForTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на --http://www.ibase.ru/firebird/doc/langref25-systables-procedures.html
        ///--Описание столбцов таблицы RDB$PROCEDURES
        ///SELECT
        ///    RDB$PROCEDURE_NAME NAME,		--Имя хранимой процедуры.
        ///    RDB$PROCEDURE_INPUTS INPUTS,	--Указывает количество входных параметров или их отсутствие (значение NULL).
        ///    RDB$PROCEDURE_OUTPUTS OUTPUTS,	--Указывает количество выходных параметров или их отсутствие (значение NULL).
        ///    RDB$DESCRIPTION DESCRIPTION,	--Произвольный текст примечания к процедуре.
        ///    RDB$PROCEDURE_SOURCE SO [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string SqlStoredProcedures {
            get {
                return ResourceManager.GetString("SqlStoredProcedures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на --get table names
        ///SELECT DISTINCT RDB$RELATION_NAME NAME 
        ///FROM RDB$RELATION_FIELDS 
        ///WHERE RDB$SYSTEM_FLAG=0;.
        /// </summary>
        internal static string SqlTablesNames {
            get {
                return ResourceManager.GetString("SqlTablesNames", resourceCulture);
            }
        }
    }
}
